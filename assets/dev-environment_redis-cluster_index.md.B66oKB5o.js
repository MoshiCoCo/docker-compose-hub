import{_ as s,c as a,o as i,a5 as n}from"./chunks/framework.-Zveb6AF.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"dev-environment/redis-cluster/index.md","filePath":"dev-environment/redis-cluster/index.md"}'),p={name:"dev-environment/redis-cluster/index.md"},l=n(`<h2 id="redis-集群" tabindex="-1">Redis 集群 <a class="header-anchor" href="#redis-集群" aria-label="Permalink to &quot;Redis 集群&quot;">​</a></h2><p>3主3丛的redis单机集群。</p><h2 id="使用步骤" tabindex="-1">使用步骤 <a class="header-anchor" href="#使用步骤" aria-label="Permalink to &quot;使用步骤&quot;">​</a></h2><h2 id="创建模板文件-redis-cluster-tmpl" tabindex="-1">创建模板文件 <code>redis-cluster.tmpl</code> <a class="header-anchor" href="#创建模板文件-redis-cluster-tmpl" aria-label="Permalink to &quot;创建模板文件 \`redis-cluster.tmpl\`&quot;">​</a></h2><p>注意，模板文件中所有<code>\${}</code>包裹的值均为后续shell命令传递的，请勿在模板文件中修改，其他值则可在模板文件中修改。</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># redis端口</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">port \${PORT}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">daemonize no</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 关闭保护模式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">protected-mode no</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 开启集群</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cluster-enabled yes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 集群节点配置</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cluster-config-file nodes.conf</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 超时</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cluster-node-timeout 5000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 集群节点IP host模式为宿主机IP</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cluster-announce-ip \${HOST}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 集群节点端口 7001 - 7006</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cluster-announce-port \${PORT}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cluster-announce-bus-port 1\${PORT}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 开启 appendonly 备份模式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">appendonly yes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 每秒钟备份</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">appendfsync everysec</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 对aof文件进行压缩时，是否执行同步操作</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">no-appendfsync-on-rewrite no</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 当目前aof文件大小超过上一次重写时的aof文件大小的100%时会再次进行重写</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">auto-aof-rewrite-percentage 100</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 重写前AOF文件的大小最小值 默认 64mb</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">auto-aof-rewrite-min-size 64mb</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">masterauth \${masterauth}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">requirepass \${requirepass}</span></span></code></pre></div><h2 id="通过模板文件初始化redis节点文件" tabindex="-1">通过模板文件初始化redis节点文件 <a class="header-anchor" href="#通过模板文件初始化redis节点文件" aria-label="Permalink to &quot;通过模板文件初始化redis节点文件&quot;">​</a></h2><p>创建redis-cluster.tmpl 后，需要在run.sh预先配置masterauth 和 requirepass值，一个是集群通信认证密码，一个是redis集群密码，以及宿主机IP。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;宿主机地址&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">masterauth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;自定义密码&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">requirepass</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;自定义密码&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#生成Redis结点文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> port </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">seq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7005</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${port}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/conf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${port}  HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${HOST} masterauth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${masterauth} requirepass</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${requirepass} </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">envsubst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./redis-cluster.tmpl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${port}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/conf/redis.conf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${port}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/data</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;init redis conf file success &quot;</span></span></code></pre></div><h2 id="启动集群各个节点" tabindex="-1">启动集群各个节点 <a class="header-anchor" href="#启动集群各个节点" aria-label="Permalink to &quot;启动集群各个节点&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><h2 id="创建集群" tabindex="-1">创建集群 <a class="header-anchor" href="#创建集群" aria-label="Permalink to &quot;创建集群&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;宿主机地址,同上&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">masterauth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;自定义密码，同上&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">requirepass</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;自定义密码，同上&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cluster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $HOST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:7000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $HOST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:7001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $HOST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:7002</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $HOST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:7003</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $HOST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:7004</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $HOST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:7005</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cluster-replicas</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${requirepass}</span></span></code></pre></div><h2 id="多主机节点集群" tabindex="-1">多主机节点集群 <a class="header-anchor" href="#多主机节点集群" aria-label="Permalink to &quot;多主机节点集群&quot;">​</a></h2><h2 id="方案1" tabindex="-1">方案1 <a class="header-anchor" href="#方案1" aria-label="Permalink to &quot;方案1&quot;">​</a></h2><p>注意，此编排文件适用于单机集群，如果你需要将集群部署在多台机器上，请修改生成的节点配置文件，然后将节点配置文件上传到不同的服务器上。注意不同节点需要配置不同的主机地址和端口。</p><p>例如生成7001-7005的节点配置文件，可以手动修改每个配置文件的主机地址，假设3台主机的主机地址分别为：</p><p>172.123.123.121 172.123.123.122 172.123.123.122</p><p>可以将7000和7001的节点配置文件的主机地址修改为172.123.123.121，7002和7003的主机地址修改为172.123.123.122，7004和7005的主机地址修改为172.123.123.123</p><p>然后将docker-compose编排文件中的service2个一组，重新编排为3个compose文件，在不同的主机上启动即可。</p><p>之后创建集群即可。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cluster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 172.123.123.121:7000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 172.123.123.121:7001</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 172.123.123.122:7002</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 172.123.123.122:7003</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">172.123.123.123:7004</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 172.123.123.123:7005</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cluster-replicas</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${requirepass}</span></span></code></pre></div><h2 id="方案2" tabindex="-1">方案2 <a class="header-anchor" href="#方案2" aria-label="Permalink to &quot;方案2&quot;">​</a></h2><p>使用单机版本的redis编排文件，使用指定配置文件（可直接使用redis-cluster.tmpl重命名为redis.conf）方式在不同的机器上启动redis容器。 ，在compose文件需要暴露集群通讯端口，然后使用<code>redis-cli --cluster create</code>命令创建集群即可。</p><p>redis.conf 文件示例</p><div class="language-conf vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">conf</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>daemonize no</span></span>
<span class="line"><span>  # 关闭保护模式</span></span>
<span class="line"><span>protected-mode no</span></span>
<span class="line"><span>  # 开启集群</span></span>
<span class="line"><span>cluster-enabled yes</span></span>
<span class="line"><span>  # 集群节点配置</span></span>
<span class="line"><span>cluster-config-file nodes.conf</span></span>
<span class="line"><span>  # 超时</span></span>
<span class="line"><span>cluster-node-timeout 5000</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  # 开启 appendonly 备份模式</span></span>
<span class="line"><span>appendonly yes</span></span>
<span class="line"><span>  # 每秒钟备份</span></span>
<span class="line"><span>appendfsync everysec</span></span>
<span class="line"><span>  # 对aof文件进行压缩时，是否执行同步操作</span></span>
<span class="line"><span>no-appendfsync-on-rewrite no</span></span>
<span class="line"><span>  # 当目前aof文件大小超过上一次重写时的aof文件大小的100%时会再次进行重写</span></span>
<span class="line"><span>auto-aof-rewrite-percentage 100</span></span>
<span class="line"><span>  # 重写前AOF文件的大小最小值 默认 64mb</span></span>
<span class="line"><span>auto-aof-rewrite-min-size 64mb</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  # 集群节点IP host模式为宿主机IP  需要配置主机IP</span></span>
<span class="line"><span>cluster-announce-ip \${HOST}</span></span>
<span class="line"><span>  # redis端口</span></span>
<span class="line"><span>port 6379</span></span>
<span class="line"><span>  # 集群节点端口 </span></span>
<span class="line"><span>cluster-announce-port 6379</span></span>
<span class="line"><span>cluster-announce-bus-port 16379</span></span>
<span class="line"><span>  #需要配置密码 </span></span>
<span class="line"><span>masterauth \${masterauth}</span></span>
<span class="line"><span>  #需要配置密码 </span></span>
<span class="line"><span>requirepass \${requirepass}</span></span></code></pre></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  redis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 镜像名称以及版本号</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">redis</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 失败后总是重启</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 自定义容器名</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">redis-6379</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 文件夹以及文件映射</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$PWD/data:/data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$PWD/logs:/logs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$PWD/redis.conf:/usr/local/etc/redis/redis.conf</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;redis-server&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/usr/local/etc/redis/redis.conf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 端口号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;6379:6379&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;16379:16379&quot;</span></span></code></pre></div>`,27),e=[l];function h(t,k,r,d,c,o){return i(),a("div",null,e)}const g=s(p,[["render",h]]);export{E as __pageData,g as default};
