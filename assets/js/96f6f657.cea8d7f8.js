"use strict";(self.webpackChunkdocker_compose_hub=self.webpackChunkdocker_compose_hub||[]).push([[557],{3905:(e,r,n)=>{n.d(r,{Zo:()=>l,kt:()=>m});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),d=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},l=function(e){var r=d(e.components);return t.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,v=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return n?t.createElement(v,s(s({ref:r},l),{},{components:n})):t.createElement(v,s({ref:r},l))}));function m(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=u;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var d=2;d<i;d++)s[d]=n[d];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1132:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=n(7462),o=(n(7294),n(3905));const i={},s=void 0,a={unversionedId:"dev-environment/redis/README",id:"dev-environment/redis/README",title:"README",description:"Redis",source:"@site/docs/dev-environment/redis/README.md",sourceDirName:"dev-environment/redis",slug:"/dev-environment/redis/",permalink:"/docs/dev-environment/redis/",draft:!1,editUrl:"https://github.com/MoshiCoCo/docker-compose-hub/blob/main/docs/dev-environment/redis/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MYSQL",permalink:"/docs/dev-environment/mysql/"},next:{title:"README",permalink:"/docs/dev-environment/redis-cluster/"}},c={},d=[{value:"Redis",id:"redis",level:2},{value:"Redis\u5355\u673a",id:"redis\u5355\u673a",level:2},{value:"\u6ce8\u610f\u4e8b\u9879",id:"\u6ce8\u610f\u4e8b\u9879",level:2}],l={toc:d};function p(e){let{components:r,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},l,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"redis"},"Redis"),(0,o.kt)("h2",{id:"redis\u5355\u673a"},"Redis\u5355\u673a"),(0,o.kt)("h2",{id:"\u6ce8\u610f\u4e8b\u9879"},"\u6ce8\u610f\u4e8b\u9879"),(0,o.kt)("p",null,"\u5982\u679c\u9700\u8981\u4f7f\u7528\u5bc6\u7801\u8bbf\u95eeredis \u8bf7\u5728 requirepass \u540e\u8ddf\u4e0a\u4f60\u7684\u81ea\u5b9a\u4e49\u5bc6\u7801\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\nmkdir docker-redis && cd docker-redis\n\ndocker-compose up -d\n\n# or\n\ndocker compose up -d\n\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"version: '3'\nservices:\n  redis:\n    # \u955c\u50cf\u540d\u79f0\u4ee5\u53ca\u7248\u672c\u53f7\n    image: redis\n    # \u5931\u8d25\u540e\u603b\u662f\u91cd\u542f\n    restart: always\n    # \u81ea\u5b9a\u4e49\u5bb9\u5668\u540d\n    container_name: redis-6379\n    # \u6587\u4ef6\u5939\u4ee5\u53ca\u6587\u4ef6\u6620\u5c04\n    volumes:\n      - $PWD/data:/data\n      - $PWD/logs:/logs\n    command: redis-server --requirepass <your-password>\n    ports:\n      # \u7aef\u53e3\u53f7\n      - \"6379:6379\"\n")),(0,o.kt)("p",null,"\u5982\u679c\u9700\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684redis.conf\u914d\u7f6e\u6587\u4ef6\u542f\u52a8\uff0c\u8bf7\u4f7f\u7528\u5982\u4e0bcompose\u7f16\u6392\u6587\u4ef6\u542f\u52a8\u3002\u5c06redis.conf\u653e\u7f6e\u5728docker-redis\u76ee\u5f55\u4e0b\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'3\'\nservices:\n  redis:\n    # \u955c\u50cf\u540d\u79f0\u4ee5\u53ca\u7248\u672c\u53f7\n    image: redis\n    # \u5931\u8d25\u540e\u603b\u662f\u91cd\u542f\n    restart: always\n    # \u81ea\u5b9a\u4e49\u5bb9\u5668\u540d\n    container_name: redis-6379\n    # \u6587\u4ef6\u5939\u4ee5\u53ca\u6587\u4ef6\u6620\u5c04\n    volumes:\n      - $PWD/data:/data\n      - $PWD/logs:/logs\n      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf\n    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]\n    ports:\n      # \u7aef\u53e3\u53f7\n      - "6379:6379"\n')))}p.isMDXComponent=!0}}]);